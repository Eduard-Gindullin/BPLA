from ultralytics import YOLO
import cv2
import os
import time

output_dir = "result"
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

while True:
    model_choice = input("Выберите модель: 1 - своя, 2 - предобученная YOLO")
    if model_choice == "1":
        model_path = input("Введите путь к вашей модели")
        if os.path.exists(model_path):
            try:
                model = YOLO(model_path)
                class_dict = model.names
                all_classes = list(class_dict.values())
                break
            except Exception as e:
                print( f"Ошибка при загрузке модели {e}")
        else:
            print("Указанный путь не существует")
    elif model_choice == "2":
        try:
            model = YOLO("D:\Python projects\BPLA\YOLO_ALL\model\yolo11n.pt")
            class_dict = model.names
            all_classes = list(class_dict.values())
            break
        except Exception as e:
                print( f"Ошибка при загрузке модели {e}")
    else:
        print("Некорректный ввод, попробуйте 1 или 2")

print("Доступные классы", all_classes)

while True:
    mode_choice = input("Выберите режим: 1 - детекция, 2 - сегментация: ")
    if model_choice == '1':
        mode = 'detection'
        
        break
    elif mode_choice == '2':
        mode = 'segmentation'
        if model_choice == '2':
            model = YOLO('D:\Python projects\BPLA\YOLO_ALL\model\yolo11n-seg.pt')
        break
    else:
        print("Некорректный ввод, попробуйте 1 или 2")

while True:
    source_choice = input("Введите источник: 1 - камера, 2 - видео, 3 - изображение: ")
    if source_choice == '1':
        cap = cv2.VideoCapture(1)
        if not cap:
            print("Не удалось открыть камеру")
            continue
        break
    elif source_choice == '2':
        video_path = input('Введите путь к видеофайлу')
        if os.path.exists(video_path):
            cap = cv2.VideoCapture(video_path)
            if not cap:
                print("Не удалось получить видеофайл")
                continue
            break
        else:
            print("Указанный путь не существует")
    elif source_choice == '3':
        image_path = input("Введите путь к изображению: ")
        if os.path.exists(image_path):
            cap = None
            break
        else:
            print("Указанный путь не существует")

    else:
        print("Некорректный ввод, пробуйте 1, 2 или 3")

if source_choice == '1' or source_choice == '2':
    if cap.isOpened():
        frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
        frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
        fps = cap.get(cv2.CAP_PROP_FPS)

        time_now = int(time.time())
        output_video_path = os.path.join(output_dir, f"output_video{time_now}.mp4")
        fourcc = cv2.VideoWriter_fourcc(*'mp4v')
        out = cv2.VideoWriter(output_video_path, fourcc, fps, (frame_width, frame_height))
 
while cap is not None and cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break


        results = model.predict(source=frame, conf='0.4')
        frame = results[0].plot()

        cv2.imshow("Video", frame)

    if source_choice == '1' or source_choice == '2':
        out.write(frame)
    
    if cv2.waitKey(30) == 27:
        break
if source_choice == '3' and cap is None:
        image =cv2.imwrite(image_path)
        results = model.predict(source=image, conf='0.4', show = True)
        image = results[0].plot()
        time_now = int(time.time())
        output_photo_path = os.path.join(output_dir, f"output_image{time_now}.jpg")
        cv2.imwrite(output_photo_path, frame)
        cv2.waitKey(0)

cv2.destroyAllWindows()




